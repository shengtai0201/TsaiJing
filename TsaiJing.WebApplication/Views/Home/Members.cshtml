@{
    ViewBag.Title = "會員申請";
}
@section styles{
    <link href="@Url.Content("~/Content/kendo/2017.2.621/kendo.common-bootstrap.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/kendo/2017.2.621/kendo.bootstrap.min.css")" rel="stylesheet" />

    <script src="@Url.Content("~/Scripts/tsaijing.js")"></script>
}
@section scripts{
    <script src="@Url.Content("~/Scripts/kendo/2017.2.621/kendo.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2017.2.621/cultures/kendo.culture.zh-TW.min.js")"></script>
    <script>
        function memberRoleEditor(container, options) {
            $('<input name="MemberRole" required data-text-field="Text" data-value-field="Value" data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    autoBind: false,
                    dataSource: {
                        transport: {
                            read: {
                                url: '/Home/ReadCVWRoles',
                                dataType: 'json',
                                type: 'POST'
                            }
                        }
                    }
                });
        }

        $(document).ready(function () {
            var url = '/api/Members';
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: url,
                        dataType: 'json',
                        type: 'GET'
                    },
                    update: {
                        url: function (data) {
                            return url + '?key=' + data.CustomerId;
                        },
                        dataType: 'json',
                        type: 'PUT'
                    },
                    parameterMap: function (member, operation) {
                        if (operation === "update" || operation === "create") {
                            member.Birthday = kendo.toString(kendo.parseDate(member.Birthday), "G");
                            member.JoinDate = kendo.toString(kendo.parseDate(member.JoinDate), "G");
                        }
                        return member;
                    }
                },
                serverAggregates: true,
                serverFiltering: true,
                serverGrouping: true,
                serverPaging: true,
                serverSorting: true,
                batch: false,
                pageSize: 20,
                error: defaultError,
                schema: {
                    data: 'DataCollection',
                    total: 'TotalRowCount',
                    model: {
                        id: 'CustomerId',
                        fields: {
                            CustomerId: { type: 'number', editable: false, nullable: true },
                            Name: { editable: false },
                            Email: { defaultValue: null },
                            Birthday: { type: 'date', validation: { required: true } },
                            Phone: { validation: { required: true } },
                            Mobile: { validation: { required: true } },
                            Address: { validation: { required: true } },
                            Introducer: { validation: { required: true } },
                            GuidanceName: { editable: false },
                            SuperviseName: { editable: false },
                            MemberRole: { type: 'object', defaultValue: null },
                            JoinDate: { type: 'date', editable: false, defaultValue: null }
                        }
                    }
                }
            });

            $("#grid").kendoGrid({
                dataSource: dataSource,
                pageable: { refresh: true },
                height: 550,
                editable: { mode: 'popup' },
                columns: [
                    {
                        command: [
                            { name: 'edit', text: { edit: '修改', cancel: '取消', update: '確定' } }
                        ], title: "&nbsp;", width: "300px"
                    },
                    { field: 'Name', title: '姓名' },
                    { field: 'Email', title: 'E-mail', hidden: true },
                    { field: 'Birthday', title: '出生日期', format: '{0:yyyy/MM/dd}' },
                    { field: 'Phone', title: '電話' },
                    { field: 'Mobile', title: '手機' },
                    { field: 'Address', title: '通訊地址', hidden: true },
                    { field: 'Introducer', title: '介紹人' },
                    { field: 'GuidanceName', title: '技導', hidden: true },
                    { field: 'SuperviseName', title: '督導', hidden: true },
                    {
                        field: 'MemberRole', title: '申請會員', hidden: true, template: function (member) {
                            if (member.MemberRole)
                                return member.MemberRole.Text;
                            else
                                return null;
                        }, editor: memberRoleEditor
                    },
                    { field: 'JoinDate', title: '申請日期', format: '{0:yyyy/MM/dd}' }
                ]
            });
        });
    </script>
}
<div id="grid"></div>